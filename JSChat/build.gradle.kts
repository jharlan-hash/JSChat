import org.gradle.api.tasks.JavaExec

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


application {
    // Define the main class for the application.
    mainClass = "com.jacksovern.JSChat"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


// Task to run the client
tasks.register<JavaExec>("runClient") {
    standardInput = System.`in`
    group = "application"
    description = "Runs the client application"
    // Adjust this to your actual client main class
    mainClass.set("com.jacksovern.Client.Client")
    classpath = sourceSets["main"].runtimeClasspath
    // Optionally, pass any client-specific arguments:
    // args("arg1", "arg2")
}

// Task to run the server
tasks.register<JavaExec>("runServer") {
    group = "application"
    description = "Runs the server application"
    // Adjust this to your actual server main class
    mainClass.set("com.jacksovern.Server.Server")
    classpath = sourceSets["main"].runtimeClasspath
    // Optionally, pass any server-specific arguments:
    // args("arg1", "arg2")
}

// Task to build the client jar
tasks.register<Jar>("jarClient") {
    group = "build"
    description = "Assembles an executable jar for the client"
    archiveBaseName.set("JSChat-client")
    from(sourceSets.main.get().output)
    manifest {
        attributes["Main-Class"] = "com.jacksovern.Client.Client"
    }
}

// Task to build the server jar
tasks.register<Jar>("jarServer") {
    group = "build"
    description = "Assembles an executable jar for the server"
    archiveBaseName.set("JSChat-server")
    from(sourceSets.main.get().output)
    manifest {
        attributes["Main-Class"] = "com.jacksovern.Server.Server"
    }
}

